#!/bin/bash

# Check for verbose flag
VERBOSE=false
if [[ "$*" == *"--verbose"* ]]; then
    VERBOSE=true
fi

# Accept --verbose before check/fix
if [[ "$1" == "--verbose" ]]; then
    MODE="${2:-check}"
else
    MODE="${1:-check}"
fi

# Validate the mode
if [[ "$MODE" != "check" && "$MODE" != "fix" ]]; then
    echo "‚ùå Invalid mode: $MODE"
    echo "Usage: $0 [check|fix] [--verbose]"
    echo "  check: Run linters in check mode (default)"
    echo "  fix:   Run linters in fix mode to auto-fix issues"
    echo "  --verbose: Show detailed output from linters"
    exit 1
fi

# Function to provide installation instructions
print_install_instructions() {
    echo "üîß FIX:"
    echo "   Shopify employee? Run 'dev up'"
    echo "   Not a Shopify employee? Install via homebrew:"
    echo "     - SwiftLint: 'brew install swiftlint' / https://github.com/realm/SwiftLint"
    echo "     - SwiftFormat: 'brew install swiftformat' / https://github.com/nicklockwood/SwiftFormat"
}

# Check for SwiftLint
if ! which swiftlint >/dev/null; then
    echo "‚ö†Ô∏è WARN: SwiftLint not installed"
    print_install_instructions
    exit 1
fi

# Check for SwiftFormat
if ! which swiftformat >/dev/null; then
    echo "‚ö†Ô∏è WARN: SwiftFormat not installed"
    print_install_instructions
    exit 1
fi

QUIET_FLAG=""
if [[ "$VERBOSE" == "false" ]]; then
    QUIET_FLAG="--quiet"
fi

if [[ "$MODE" == "fix" ]]; then
    swiftlint lint --fix $QUIET_FLAG
fi

# SwiftLint doesn't report errors when running in fix mode
# Running again in strict mode to ensure no errors are missed
swiftlint lint --strict $QUIET_FLAG .
LINT_STATUS=$?

if [ $LINT_STATUS -eq 0 ]; then
    echo "‚úÖ SwiftLint exit status: $LINT_STATUS"
else
    echo "‚ùå SwiftLint exit status: $LINT_STATUS"
fi

echo ""

# Run SwiftFormat
if [[ "$MODE" == "fix" ]]; then
    swiftformat . $QUIET_FLAG
    FORMAT_STATUS=$?
else 
    swiftformat . $QUIET_FLAG --lint
    FORMAT_STATUS=$? 
fi

if [ $FORMAT_STATUS -eq 0 ]; then
    echo "‚úÖ SwiftFormat exit status: $FORMAT_STATUS"
else
    echo "‚ùå SwiftFormat exit status: $FORMAT_STATUS"
fi

# Function to print error messages for linting issues
print_linting_error() {
    local tool_name=$1
    echo "‚ùå $tool_name detected issues that need to be fixed."
    if [[ "$MODE" == "check" ]]; then
        echo "üîß How to fix:"
        echo "   Shopify employee? Run 'dev fix' and resolve remaining issues"
        echo "   Not a Shopify employee? Run './Scripts/lint fix' and resolve remaining issues"
    else
        echo "üîß These files will need to be fixed manually"
    fi
}

# Handle exit codes for check mode
echo ""

if [ $LINT_STATUS -ne 0 ]; then
    print_linting_error "SwiftLint"
    exit 1
fi

if [ $FORMAT_STATUS -ne 0 ]; then
    print_linting_error "SwiftFormat"
    exit 1
fi
